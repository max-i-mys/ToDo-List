{"version":3,"sources":["api/crud.js","api/constants.js","contexts/TodosContext.js","hooks/useTodos.js","components/AddTodo/AddTodo.jsx","utils/functions.js","components/TodoDelete/TodoDelete.jsx","components/Card/Card.jsx","components/TodoCards/TodoCards.jsx","App.jsx","index.js"],"names":["fetchData","url","opts","a","fetch","res","ok","Error","status","json","data","console","warn","fetchAdd","base","path","method","body","JSON","stringify","headers","fetchMerge","id","fetchRemove","BASE_URL","initialState","TodosContext","createContext","TodosProvider","children","useReducer","state","action","type","payload","newState","parse","idX","findIndex","todo","splice","log","todos","dispatchTodos","useEffect","Provider","value","useTodos","useContext","AddTodo","useState","todoTitle","setTodoTitle","todoBody","setBody","event","preventDefault","newTodo","title","createdAt","Date","now","processAt","finishedAt","savedTodo","target","reset","onSubmit","className","onChange","name","required","minLength","getNewStatus","formatterDate","Intl","DateTimeFormat","day","month","year","hour","minute","TodoDelete","props","dispatch","onClick","Card","dispach","newStatus","todoWithNewStatus","onDoubleClick","format","TodoCards","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b83751b.chunk.js","sourcesContent":["async function fetchData(url, opts) {\r\n    try {\r\n        const res = await fetch(url, opts)\r\n        if (!res.ok) {\r\n            throw new Error(`Response error. Status ->> ${res.status}`)\r\n        }\r\n        const data = await res.json()\r\n        // console.log(data)\r\n        return data\r\n    } catch (e) {\r\n        console.warn(e);\r\n    }\r\n}\r\n//READ\r\nexport function fetchOne(base, path, id) {\r\n    return fetchData(`${base}/${path}/${id}`)\r\n}\r\nexport function fetchList(base, path) {\r\n    return fetchData(`${base}/${path}`)\r\n}\r\n//CREATE\r\nexport function fetchAdd(base, path, data) {\r\n    const opts = {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    }\r\n    return fetchData(`${base}/${path}`, opts)\r\n}\r\n//UPDATE\r\nexport function fetchReplace(base, path, id, data) {\r\n    const opts = {\r\n        method: 'PUT',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    }\r\n    return fetchData(`${base}/${path}/${id}`, opts)\r\n}\r\nexport function fetchMerge(base, path, id, data) {\r\n    const opts = {\r\n        method: 'PATCH',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n    }\r\n    return fetchData(`${base}/${path}/${id}`, opts)\r\n}\r\n//DELETE\r\nexport function fetchRemove(base, path, id) {\r\n    const opts = {\r\n        method: 'DELETE',\r\n    }\r\n    return fetchData(`${base}/${path}/${id}`, opts)\r\n}","export const BASE_URL = \"http://localhost:3004\"\r\n","import { createContext, useReducer, useEffect } from \"react\"\r\nimport { fetchList } from \"../api/crud\"\r\nimport { BASE_URL } from \"./../api/constants\"\r\n\r\nconst initialState = []\r\nexport const TodosContext = createContext()\r\nexport default function TodosProvider({ children }) {\r\n\tconst [todos, dispatchTodos] = useReducer(reducer, initialState)\r\n\tuseEffect(() => {\r\n\t\t;(async function () {\r\n\t\t\tconst todos = await fetchList(BASE_URL, \"todos\")\r\n\t\t\tdispatchTodos({ type: \"INITIAL\", payload: todos })\r\n\t\t})()\r\n\t}, [])\r\n\r\n\tfunction reducer(state, action) {\r\n\t\tswitch (action.type) {\r\n\t\t\tcase \"INITIAL\":\r\n\t\t\t\treturn action.payload\r\n\t\t\tcase \"ADD\":\r\n\t\t\t\treturn [...state, action.payload]\r\n\t\t\tcase \"UPDATE\": {\r\n\t\t\t\tconst newState = JSON.parse(JSON.stringify([...state]))\r\n\t\t\t\tconst idX = newState.findIndex(todo => todo.id === action.payload.id)\r\n\t\t\t\tnewState.splice(idX, 1, action.payload)\r\n\t\t\t\treturn newState\r\n\t\t\t}\r\n\t\t\tcase \"DELETE\": {\r\n\t\t\t\tconst newState = JSON.parse(JSON.stringify([...state]))\r\n\t\t\t\tconst idX = newState.findIndex(todo => todo.id === action.payload)\r\n\t\t\t\tconsole.log(action.payload)\r\n\t\t\t\tif (idX !== -1) {\r\n\t\t\t\t\tnewState.splice(idX, 1)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`In ${action.type} wrong todo.id`)\r\n\t\t\t\t}\r\n\t\t\t\treturn newState\r\n\t\t\t}\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Wrong action type: ${action.type}`)\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<TodosContext.Provider value={[todos, dispatchTodos]}>\r\n\t\t\t{children}\r\n\t\t</TodosContext.Provider>\r\n\t)\r\n}\r\n","import { useContext } from 'react'\r\nimport { TodosContext } from '../contexts/TodosContext';\r\n\r\nexport function useTodos() {\r\n    return useContext(TodosContext)\r\n}","import React, { useState } from \"react\"\r\nimport { fetchAdd } from \"./../../api/crud\"\r\nimport { BASE_URL } from \"./../../api/constants\"\r\nimport { useTodos } from \"./../../hooks/useTodos\"\r\nimport \"./AddTodo.css\"\r\n\r\nexport default function AddTodo() {\r\n\tconst [todoTitle, setTodoTitle] = useState(\"\")\r\n\tconst [todoBody, setBody] = useState()\r\n\r\n\tconst [, dispatchTodos] = useTodos()\r\n\tasync function addTodo(event) {\r\n\t\tevent.preventDefault()\r\n\t\tconst newTodo = {\r\n\t\t\ttitle: todoTitle,\r\n\t\t\tbody: todoBody,\r\n\t\t\tcreatedAt: Date.now(),\r\n\t\t\tprocessAt: false,\r\n\t\t\tfinishedAt: false,\r\n\t\t\tstatus: \"new\",\r\n\t\t}\r\n\t\tconst savedTodo = await fetchAdd(BASE_URL, \"todos\", newTodo)\r\n\t\tdispatchTodos({ type: \"ADD\", payload: savedTodo })\r\n\t\tevent.target.reset()\r\n\t}\r\n\treturn (\r\n\t\t<form onSubmit={addTodo} className=\"todo__add\">\r\n\t\t\t<input\r\n\t\t\t\tclassName=\"todo__add-title\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tonChange={event => setTodoTitle(() => event.target.value)}\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\trequired\r\n\t\t\t/>\r\n\t\t\t<textarea\r\n\t\t\t\tclassName=\"todo__add-body\"\r\n\t\t\t\tname=\"body\"\r\n\t\t\t\tonChange={event => setBody(() => event.target.value)}\r\n\t\t\t\trequired\r\n\t\t\t\tminLength=\"10\"\r\n\t\t\t></textarea>\r\n\t\t\t<button type=\"submit\" className=\"todo__btn\">\r\n\t\t\t\tAdd\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t)\r\n}\r\n","export function getNewStatus(status) {\r\n\tswitch (status) {\r\n\t\tcase \"new\":\r\n\t\t\treturn \"process\"\r\n\t\tcase \"process\":\r\n\t\t\treturn \"finished\"\r\n\t\tdefault:\r\n\t\t\treturn \"finished\"\r\n\t}\r\n}\r\nexport const formatterDate = new Intl.DateTimeFormat(\"ru\", {\r\n\tday: \"numeric\",\r\n\tmonth: \"2-digit\",\r\n\tyear: \"2-digit\",\r\n\thour: \"numeric\",\r\n\tminute: \"numeric\",\r\n})\r\n","import { fetchRemove } from \"../../api/crud\"\r\nimport \"./TodoDelete.css\"\r\nimport { BASE_URL } from \"../../api/constants\"\r\nimport { useTodos } from \"../../hooks/useTodos\"\r\n\r\nexport default function TodoDelete(props) {\r\n\tconst [, dispatch] = useTodos()\r\n\r\n\tasync function todoDel() {\r\n\t\tconst todoRemote = await fetchRemove(BASE_URL, \"todos\", props.id)\r\n\t\tif (todoRemote) {\r\n\t\t\tdispatch({ type: \"DELETE\", payload: props.id })\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button onClick={todoDel} className=\"todo__close-btn\">\r\n\t\t\t\tDel\r\n\t\t\t</button>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { BASE_URL } from \"../../api/constants\"\r\nimport { fetchMerge } from \"../../api/crud\"\r\nimport { useTodos } from \"../../hooks/useTodos\"\r\nimport { formatterDate, getNewStatus } from \"../../utils/functions\"\r\nimport TodoDelete from \"../TodoDelete/TodoDelete\"\r\n\r\nexport default function Card({ todo }) {\r\n\tconst [, dispach] = useTodos()\r\n\tasync function changeStatus() {\r\n\t\tconst newStatus = getNewStatus(todo.status)\r\n\t\tif (newStatus !== todo.status) {\r\n\t\t\tconst todoWithNewStatus = await fetchMerge(BASE_URL, \"todos\", todo.id, {\r\n\t\t\t\tstatus: newStatus,\r\n\t\t\t\tprocessAt: newStatus === \"process\" ? Date.now() : todo.processAt,\r\n\t\t\t\tfinishedAt: newStatus === \"finished\" ? Date.now() : todo.finishedAt,\r\n\t\t\t})\r\n\t\t\tdispach({ type: \"UPDATE\", payload: todoWithNewStatus })\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div onDoubleClick={changeStatus} className={`todo__task ${todo.status}`}>\r\n\t\t\t\t<h4 className=\"todo__title\">{todo.title}</h4>\r\n\t\t\t\t<TodoDelete id={todo.id} />\r\n\t\t\t\t<p className=\"todo__body\">{todo.body}</p>\r\n\t\t\t\t<div className=\"todo__info\">\r\n\t\t\t\t\t<span>{todo.status}</span>\r\n\t\t\t\t\t<div className=\"todo__time\">\r\n\t\t\t\t\t\t<p>Create: {formatterDate.format(todo.createdAt)}</p>\r\n\t\t\t\t\t\t{todo.processAt && (\r\n\t\t\t\t\t\t\t<p>Process: {formatterDate.format(todo.processAt)}</p>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{todo.finishedAt && (\r\n\t\t\t\t\t\t\t<p>Finished: {formatterDate.format(todo.finishedAt)}</p>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n","import { useTodos } from \"../../hooks/useTodos\"\r\nimport \"./TodoCards.css\"\r\nimport React from \"react\"\r\nimport Card from \"../Card/Card\"\r\n\r\nexport default function TodoCards() {\r\n\tconst [todos] = useTodos()\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{todos && (\r\n\t\t\t\t<div className=\"todo__box\">\r\n\t\t\t\t\t{todos.map(todo => (\r\n\t\t\t\t\t\t<Card key={todo.id} todo={todo} />\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport AddTodo from './components/AddTodo/AddTodo';\r\nimport TodoCards from \"./components/TodoCards/TodoCards\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <TodoCards />\r\n      <AddTodo></AddTodo>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport TodosProvider from './contexts/TodosContext';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <TodosProvider>\r\n      <App />\r\n    </TodosProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}